class Solution {
public:
    int subarraySum(vector<int>& nums, int k) 
    {
        int cum=0; // cumulated sum
        unordered_map<int,int> rec; // prefix sum recorder
        int cnt = 0; // number of found subarray
        rec[0]++; // to take into account those subarrays that begin with index 0
        for(int i=0;i<nums.size();i++){
            cum += nums[i];
            cnt += rec[cum-k];
            rec[cum]++;
        }
        return cnt;
    }
};

///////////////working/////////////////

0----1;
cum=1;
cnt=rec[1-2]=0;
rec[1]++;
1-----1;

cum=2;
cnt=0+rec[0]=1;
rec[2]++;
2-----1;

cum=3;
cnt=1+rec[3-2]=2
rec[3]++;

return cnt;//2-----correct
    
